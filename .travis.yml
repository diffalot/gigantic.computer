language: node_js
node_js:
- node

services:
- docker

cache:
  directories:
  - $HOME/google-cloud-sdk
  - node_modules

env:
  global:
  - PATH=$HOME/google-cloud-sdk/bin:$PATH
  - GOOGLE_APPLICATION_CREDENTIALS=$TRAVIS_BUILD_DIR/client_secrets.json
  - GOOGLE_REGION=us-central1-a
  - GOOGLE_PROJECT=gigantic-216719
  - K8S_NAME=gigantic-computer-site
  - DEPLOY_HOST=gigantic.computer
  - PORT=80

script:
- npm run build

deploy:
  script:
  - if [ ! -d $HOME/google-cloud-sdk/bin ]; then
    cd $HOME &&
    rm -rf $HOME/google-cloud-sdk &&
    wget https://dl.google.com/dl/cloudsdk/release/google-cloud-sdk.tar.gz &&
    tar xzf google-cloud-sdk.tar.gz &&
    printf '\ny\n\ny\ny\n' | ./google-cloud-sdk/install.sh &&
    cd $TRAVIS_BUILD_DIR;
    fi
  - gcloud --quiet components update
  - gcloud --quiet components install kubectl

  - gcloud config set compute/region $GOOGLE_REGION
  - gcloud config set project $GOOGLE_PROJECT

  - openssl aes-256-cbc -K $encrypted_1b0eff7f4baf_key -iv $encrypted_1b0eff7f4baf_iv
    -in client_secrets.json.enc -out client_secrets.json -d
  - if [ -a client_secrets.json ]; then gcloud -q auth activate-service-account --key-file
    client_secrets.json; fi

  - mkdir -p $HOME/.docker
  - gcloud --quiet auth configure-docker

  - gcloud container clusters get-credentials cluster-1 --region $GOOGLE_REGION

  - docker build -t gcr.io/${GOOGLE_PROJECT}/${K8S_NAME}:$TRAVIS_COMMIT .
  - docker push gcr.io/${GOOGLE_PROJECT}/${K8S_NAME}:$TRAVIS_COMMIT
  - envsubst < ./k8s/deployment.yaml | kubectl apply -f -
  - kubectl expose deployment $K8S_NAME --port $PORT || true
  - envsubst < ./k8s/ingress.yaml | kubectl apply -f -
